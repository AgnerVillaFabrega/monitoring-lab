---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zabbix-server-config
  namespace: monitoring
data:
  DB_SERVER_HOST: postgres
  POSTGRES_DB: zabbix
  POSTGRES_USER: zabbix
  POSTGRES_PASSWORD: zabbix123
  ZBX_ENABLE_SNMP_TRAPS: "true"
  ZBX_STARTDISCOVERERS: "5"
  ZBX_STARTPOLLERS: "10"
  ZBX_STARTPOLLERSUNREACHABLE: "3"
  ZBX_STARTTRAPPERS: "5"
  ZBX_STARTPINGERS: "3"
  ZBX_STARTDBSYNCERS: "4"
  ZBX_CACHESIZE: "256M"
  ZBX_HISTORYCACHESIZE: "128M"
  ZBX_HISTORYINDEXCACHESIZE: "128M"
  ZBX_TRENDCACHESIZE: "128M"
  ZBX_VALUECACHESIZE: "256M"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zabbix-server-data
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-path

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zabbix-server
  namespace: monitoring
  labels:
    app: zabbix-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zabbix-server
  template:
    metadata:
      labels:
        app: zabbix-server
    spec:
      initContainers:
      - name: wait-for-db
        image: postgres:15-alpine
        command: ['sh', '-c']
        args:
        - |
          until pg_isready -h postgres -p 5432 -U zabbix; do
            echo "Waiting for postgres..."
            sleep 5
          done
          echo "PostgreSQL is ready!"
      containers:
      - name: zabbix-server
        image: zabbix/zabbix-server-pgsql:6.4-alpine-latest
        ports:
        - containerPort: 10051
        envFrom:
        - configMapRef:
            name: zabbix-server-config
        volumeMounts:
        - name: zabbix-server-data
          mountPath: /var/lib/zabbix
        - name: zabbix-export
          mountPath: /var/lib/zabbix/export
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          tcpSocket:
            port: 10051
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          tcpSocket:
            port: 10051
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: zabbix-server-data
        persistentVolumeClaim:
          claimName: zabbix-server-data
      - name: zabbix-export
        nfs:
          server: ${NFS_SERVER}  # IP de tu servidor NFS
          path: ${NFS_PATH}

---
apiVersion: v1
kind: Service
metadata:
  name: zabbix-server
  namespace: monitoring
spec:
  selector:
    app: zabbix-server
  ports:
  - name: zabbix-trapper
    port: 10051
    targetPort: 10051
  type: ClusterIP