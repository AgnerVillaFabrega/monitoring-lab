apiVersion: v1
kind: Namespace
metadata:
  name: app1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  namespace: app1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: app1
        image: app1:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: TEMPO_ENDPOINT
          value: "http://tempo.monitoring.svc.cluster.local:4318"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: app1-service
  namespace: app1
  labels:
    app: app1
spec:
  selector:
    app: app1
  ports:
    - port: 8080
      targetPort: 8080
      name: http

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1-traffic-generator
  namespace: app1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1-traffic-generator
  template:
    metadata:
      labels:
        app: app1-traffic-generator
    spec:
      containers:
      - name: traffic-generator
        image: app1-traffic:latest
        imagePullPolicy: Never
        env:
        - name: TARGET_URL
          value: "http://app1-service:8080"
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "64Mi"
            cpu: "50m"