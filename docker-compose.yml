services:
  # E-commerce Services
  user-service:
    build: ./services/user-service
    ports:
      - "8081:8081"
    depends_on:
      - tempo
      - loki
    environment:
      - SERVICE_NAME=user-service
      - SERVICE_PORT=8081
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - ecommerce

  product-service:
    build: ./services/product-service
    ports:
      - "8082:8082"
    depends_on:
      - tempo
      - loki
    environment:
      - SERVICE_NAME=product-service
      - SERVICE_PORT=8082
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8082/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - ecommerce

  order-service:
    build: ./services/order-service
    ports:
      - "8083:8083"
    depends_on:
      - tempo
      - loki
      - user-service
      - product-service
    environment:
      - SERVICE_NAME=order-service
      - SERVICE_PORT=8083
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8083/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - ecommerce

  # Traffic Generator
  traffic-generator:
    build: ./services/traffic-generator
    depends_on:
      - user-service
      - product-service
      - order-service
      - tempo
    environment:
      - SERVICE_NAME=traffic-generator
    restart: unless-stopped
    networks:
      - ecommerce

  # Observability Stack
  tempo:
    image: grafana/tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./infrastructure/tempo/tempo.yaml:/etc/tempo.yaml
      - tempo-data:/tmp/tempo
    ports:
      - "3200:3200"   # tempo
      - "4317:4317"   # otlp grpc
      - "4318:4318"   # otlp http
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3200/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - ecommerce

  loki:
    image: grafana/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./infrastructure/loki/loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - ecommerce

  # Log collector using Promtail
  promtail:
    image: grafana/promtail
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./infrastructure/loki/promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - ecommerce

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_AUTO_ASSIGN_ORG_ROLE=Admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    volumes:
      - grafana-data:/var/lib/grafana
      - ./infrastructure/grafana/provisioning:/etc/grafana/provisioning
      - ./infrastructure/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - loki
      - tempo
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - ecommerce

networks:
  ecommerce:
    driver: bridge
    name: ecommerce-monitoring

volumes:
  grafana-data:
    name: ecommerce-grafana-data
  loki-data:
    name: ecommerce-loki-data
  tempo-data:
    name: ecommerce-tempo-data